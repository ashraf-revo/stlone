---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: reader
rules:
- apiGroups: [""]
  resources: ["routes","pods","pods/log","pods/status","services","services/proxy","configmaps","endpoints","secrets","serviceaccounts","namespaces","namespaces/status","resourcequotas/status","events","bindings","replicationcontrollers","persistentvolumeclaims"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: reader
roleRef:
  kind: Role
  name: reader
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: default
  apiGroup: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clone
spec:
  selector:
    matchLabels:
      run: clone
  template:
    spec:
      containers:
      - name: clone
        image: ashraf1abdelrasool/clone:0.0.1-SNAPSHOT
        imagePullPolicy: always
        ports:
        - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: clone
  labels:
    run: clone
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
    protocol: tcp
  type: ClusterIp
  selector:
    run: clone
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: test-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /clone
        backend:
          serviceName: clone
          servicePort: 80